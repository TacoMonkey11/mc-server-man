#!/usr/bin/env bash

normal=$'\e[0m'
brown=$(tput setaf 94)
green=$(tput setaf 2)
tag="${brown}[${green}MSI${brown}]${normal}"

#*******************#
# Utility Functions #
#*******************#

# https://stackoverflow.com/a/4025065
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

latest_game_version() {
    local latest_version=$(curl -s "https://meta.quiltmc.org/v3/versions/game" | yq '.[] | select(.stable) | .version' | head -n 1)
    echo ${latest_version}
}

verify_mc_version() {
    if curl -s https://meta.multimc.org/v1/net.minecraft/ | yq -P '.versions[] | select(.type=="release") | .version' | grep -q "^$1$"; then
        return 1  
    else
        echo "$tag $1 is not a valid minecraft version, exiting..."  
        exit 0
    fi
}

#*********************#
# Modloader Functions #
#*********************#

forge_from_mc() {
    forge=$(curl -s "https://maven.minecraftforge.net/net/minecraftforge/forge/maven-metadata.xml" | yq -p=xml '.metadata.versioning.versions' | grep "^  - $1-.*" | head -n 1)
    forge=${forge:4}
    echo $forge
}

verify_forge() {
    if curl -s "https://maven.minecraftforge.net/net/minecraftforge/forge/maven-metadata.xml" | yq -p=xml '.metadata.versioning.versions' | grep -q "^  - $1$"; then
        return 1
    else
        echo "$tag That's not a valid forge version, exiting"
        exit 0
    fi
}

install_forge() {
    # ask for mc version
    echo "$tag This script only supports forge versions 1.6.1 and above"
    read -p "$tag Minecraft Version [$(latest_game_version)]: " local mc_version
    mc_version=${mc_version:-$(latest_game_version)}
    # check if inputted version is a valid minecraft version
    verify_mc_version $mc_version

    # check to see if the version is supported
    vercomp $mc_version 1.6.1
    if [[ $? == 2 ]]; then
        echo "$tag $mc_version is too old, only 1.6.1 and above are supported, exiting"
        exit 0
    fi
    latest_forge=$(forge_from_mc "$mc_version")
    if [[ -z $latest_forge ]]; then
        echo "$tag Forge doesn't have a release for the selected minecraft version, exiting"
        exit 0
    fi
    IFS='-' read mc forge_version extra <<<"$latest_forge"
    read -p "$tag Entire Forge Loader Version [$forge_version]: " forge
    local forge=${forge:-${latest_forge}}

    if verify_forge $forge; then
        echo "$tag $forge is not a valid forge version, exiting"
        exit 0
    fi
    read -p "$tag Server Name (used for server directory name): " server_name
    if [[ -z $server_name  ]]; then
        echo "$tag Server name can't be empty, exiting"
        exit 0
    fi

    # actual installing part
    mkdir $server_name
    cd $server_name

    curl -s "https://maven.minecraftforge.net/net/minecraftforge/forge/$forge/forge-$forge-installer.jar" -o installer.jar
    java -jar installer.jar --installServer >/dev/null &
    pid=$!
    spin='-\|/'
    i=0
    while kill -0 $pid 2>/dev/null; do
        i=$(((i + 1) % 4))
        printf "\r$tag Installing ${spin:$i:1}"
        sleep .1
    done
    rm installer.jar*
    printf "\n"

}

install_fabric() {
    echo "$tag Remember, Fabric only supports Minecraft versions 1.14 and above"
    read -p "$tag Minecraft Version [$(latest_game_version)]: " mc_version
    mc_version=${mc_version:-$(latest_game_version)}

    verify_mc_version $mc_version
    vercomp $mc_version 1.14
    if [[ $? == 2 ]]; then
        echo "$tag You selected a version below 1.14 which fabric does not support, exiting"
        exit 0
    fi
}

#**************#
# Script Start #
#**************#

printf """
$brown(${green}1$brown)$normal Forge
$brown(${green}2$brown)$normal Fabric
$brown(${green}3$brown)$normal Quilt
$brown(${green}4$brown)$normal Exit

"""

read -p "$tag Select Modloader: " modloader

case $modloader in
1) install_forge ;;
2) install_fabric ;;
3) printf "Quilt" ;;
4) exit 1 ;;
esac

